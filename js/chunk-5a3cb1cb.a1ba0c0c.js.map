{"version":3,"sources":["webpack:///./src/views/region/insight.vue","webpack:///src/views/region/insight.vue","webpack:///./src/views/region/insight.vue?eafd","webpack:///./src/views/region/insight.vue?6175","webpack:///./src/views/region/insight.vue?0ec1"],"names":["render","_vm","this","_c","_self","staticClass","_m","staticStyle","attrs","model","value","selectedType","callback","$$v","expression","_l","typeOptions","item","key","label","on","refreshAll","_v","exportReport","slot","_s","warnings","filter","w","level","length","idx","class","text","statCards","card","title","getCardClass","$event","handleCardClick","icon","trendValue","trendAbs","trendUnit","padding","nativeOn","undefined","trend","trendClass","_e","trendPrefix","footer","updateTrendChart","trendType","ref","mapViewMode","Date","toLocaleTimeString","refreshRealtime","realtimeList","time","color","content","refreshTable","filteredTableData","background","scopedSlots","_u","fn","scope","getTrendTagType","row","viewDetail","staticRenderFns","name","data","today","dateStr","toISOString","slice","pop","ent","env","traffic","med","edu","popTrend","entTrend","envTrend","trafficTrend","medTrend","eduTrend","toFixed","trendMap","tableData","type","updateTime","computed","mounted","initTrendChart","loadAMap","realtimeTimer","setInterval","pushRealtime","methods","window","AMap","initMap","script","document","createElement","async","src","onload","head","appendChild","$refs","trendChart","chart","echarts","setOption","tooltip","trigger","legend","xAxis","yAxis","series","Object","keys","map","showSymbol","lineStyle","width","opacity","emphasis","focus","center","Map","zoom","viewMode","pitch","mapStyle","features","addControl","Scale","ToolBar","MapType","district","DistrictSearch","subdistrict","search","status","result","bounds","districtList","boundaries","polygon","Polygon","path","strokeWeight","strokeColor","fillColor","fillOpacity","add","setFitView","locations","position","forEach","location","marker","Marker","Icon","size","Size","image","imageSize","infoWindow","InfoWindow","offset","Pixel","open","getPosition","circle","Circle","radius","markers","push","$watch","newMode","heatmap","setMap","createHeatmap","HeatMap","heatmapData","max","lng","lat","count","gradient","setDataSet","$message","message","colors","backgroundColor","borderColor","borderWidth","textStyle","formatter","params","seriesName","grid","left","right","bottom","containLabel","axisLine","axisTick","show","axisLabel","splitLine","symbolSize","itemStyle","areaStyle","LinearGradient","replace","now","timeStr","toTimeString","substr","types","getTimeOfDay","Math","random","getRandomCompanyName","floor","getRandomHospital","getRandomSchool","getRandomEvent","unshift","hour","getHours","prefixes","industries","suffixes","hospitals","schools","events","success","timeArr","minutes","$alert","confirmButtonText","Number","parseFloat","abs","v","beforeDestroy","destroy","clearInterval","component"],"mappings":"gJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,MAAM,CAACE,YAAY,eAAe,CAACJ,EAAIK,GAAG,GAAGH,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,YAAY,CAACI,YAAY,CAAC,MAAQ,QAAQ,eAAe,QAAQC,MAAM,CAAC,YAAc,SAAS,KAAO,SAASC,MAAM,CAACC,MAAOT,EAAIU,aAAcC,SAAS,SAAUC,GAAMZ,EAAIU,aAAaE,GAAKC,WAAW,iBAAiBb,EAAIc,GAAId,EAAIe,aAAa,SAASC,GAAM,OAAOd,EAAG,YAAY,CAACe,IAAID,EAAKP,MAAMF,MAAM,CAAC,MAAQS,EAAKE,MAAM,MAAQF,EAAKP,YAAW,GAAGP,EAAG,YAAY,CAACI,YAAY,CAAC,eAAe,QAAQC,MAAM,CAAC,KAAO,UAAU,KAAO,kBAAkB,KAAO,SAASY,GAAG,CAAC,MAAQnB,EAAIoB,aAAa,CAACpB,EAAIqB,GAAG,UAAUnB,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,UAAU,KAAO,mBAAmB,KAAO,SAASY,GAAG,CAAC,MAAQnB,EAAIsB,eAAe,CAACtB,EAAIqB,GAAG,WAAW,KAAKnB,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,WAAW,CAACE,YAAY,yBAAyBG,MAAM,CAAC,MAAQ,gCAAgC,KAAO,OAAO,YAAY,GAAG,UAAW,KAASL,EAAG,WAAW,CAACE,YAAY,mBAAmBG,MAAM,CAAC,MAAQ,2BAA2B,KAAO,UAAU,YAAY,GAAG,UAAW,MAAU,GAAGL,EAAG,UAAU,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAO,UAAUgB,KAAK,UAAU,CAACrB,EAAG,IAAI,CAACE,YAAY,4BAA4BF,EAAG,OAAO,CAACF,EAAIqB,GAAG,aAAanB,EAAG,SAAS,CAACE,YAAY,gBAAgBG,MAAM,CAAC,KAAO,QAAQ,KAAO,WAAW,CAACP,EAAIqB,GAAGrB,EAAIwB,GAAGxB,EAAIyB,SAASC,OAAOC,GAAiB,MAAZA,EAAEC,OAAeC,QAAQ,YAAY,GAAG3B,EAAG,MAAM,CAACE,YAAY,mBAAmBJ,EAAIc,GAAId,EAAIyB,UAAU,SAAST,EAAKc,GAAK,OAAO5B,EAAG,MAAM,CAACe,IAAIa,EAAI1B,YAAY,eAAe2B,MAAM,CAAC,eAA+B,MAAff,EAAKY,MAAe,iBAAiC,MAAfZ,EAAKY,QAAgB,CAAC1B,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAAiB,MAAfY,EAAKY,MAAe1B,EAAG,IAAI,CAACE,YAAY,oBAAoBF,EAAG,IAAI,CAACE,YAAY,mBAAmBF,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGR,EAAKY,OAAO,SAAS1B,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGR,EAAKgB,WAAW9B,EAAG,YAAY,CAACE,YAAY,iBAAiBG,MAAM,CAAC,KAAO,OAAO,KAAO,YAAY,CAACP,EAAIqB,GAAG,SAAS,MAAK,KAAKnB,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,SAAS,CAACK,MAAM,CAAC,OAAS,KAAKP,EAAIc,GAAId,EAAIiC,WAAW,SAASC,GAAM,OAAOhC,EAAG,SAAS,CAACe,IAAIiB,EAAKC,MAAM5B,MAAM,CAAC,KAAO,IAAI,CAACL,EAAG,MAAM,CAACE,YAAY,YAAY2B,MAAM/B,EAAIoC,aAAaF,GAAMf,GAAG,CAAC,MAAQ,SAASkB,GAAQ,OAAOrC,EAAIsC,gBAAgBJ,MAAS,CAAChC,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,IAAI,CAAC6B,MAAMG,EAAKK,SAASrC,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGU,EAAKC,UAAUjC,EAAG,MAAM,CAACE,YAAY,cAAc,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGU,EAAKzB,UAAUP,EAAG,MAAM,CAACE,YAAY,cAAc,CAAEJ,EAAIwC,WAAWN,GAAQ,EAAGhC,EAAG,OAAO,CAACE,YAAY,YAAY,CAACF,EAAG,IAAI,CAACE,YAAY,gBAAgBJ,EAAIqB,GAAG,KAAKrB,EAAIwB,GAAGxB,EAAIyC,SAASP,IAAOlC,EAAIwB,GAAGxB,EAAI0C,UAAUR,IAAO,OAAQlC,EAAIwC,WAAWN,GAAQ,EAAGhC,EAAG,OAAO,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAACE,YAAY,mBAAmBJ,EAAIqB,GAAG,KAAKrB,EAAIwB,GAAGxB,EAAIyC,SAASP,IAAOlC,EAAIwB,GAAGxB,EAAI0C,UAAUR,IAAO,OAAOhC,EAAG,OAAO,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAACE,YAAY,kBAAkBJ,EAAIqB,GAAG,qBAAoB,IAAI,GAAGnB,EAAG,SAAS,CAACI,YAAY,CAAC,gBAAgB,QAAQC,MAAM,CAAC,OAAS,KAAKP,EAAIc,GAAId,EAAIiC,WAAW,SAASC,GAAM,OAAOhC,EAAG,SAAS,CAACe,IAAIiB,EAAKC,MAAM5B,MAAM,CAAC,KAAO,IAAI,CAACL,EAAG,UAAU,CAACE,YAAY,2BAA2BG,MAAM,CAAC,aAAa,CAAEoC,QAAS,SAAUC,SAAS,CAAC,MAAQ,SAASP,GAAQ,OAAOrC,EAAIsC,gBAAgBJ,MAAS,CAAChC,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAAC6B,MAAMG,EAAKK,OAAOvC,EAAIqB,GAAG,IAAIrB,EAAIwB,GAAGU,EAAKC,OAAO,OAAOjC,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,OAAO,CAACE,YAAY,cAAc,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGU,EAAKzB,eAA0BoC,IAAfX,EAAKY,MAAqB5C,EAAG,OAAO,CAACE,YAAY,cAAc2B,MAAM/B,EAAI+C,WAAWb,IAAO,CAAElC,EAAIwC,WAAWN,GAAQ,EAAGhC,EAAG,IAAI,CAACE,YAAY,sBAAuBJ,EAAIwC,WAAWN,GAAQ,EAAGhC,EAAG,IAAI,CAACE,YAAY,yBAAyBJ,EAAIgD,KAAK9C,EAAG,OAAO,CAACE,YAAY,aAAa,CAACJ,EAAIqB,GAAG,IAAIrB,EAAIwB,GAAGxB,EAAIiD,YAAYf,IAAOlC,EAAIwB,GAAGxB,EAAIyC,SAASP,IAAOlC,EAAIwB,GAAGxB,EAAI0C,UAAUR,IAAO,SAASlC,EAAIgD,OAAO9C,EAAG,MAAM,CAACE,YAAY,eAAe,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGU,EAAKgB,cAAc,MAAK,GAAGhD,EAAG,SAAS,CAACE,YAAY,gBAAgBG,MAAM,CAAC,OAAS,KAAK,CAACL,EAAG,SAAS,CAACK,MAAM,CAAC,KAAO,KAAK,CAACL,EAAG,UAAU,CAACE,YAAY,aAAaG,MAAM,CAAC,OAAS,UAAU,CAACL,EAAG,MAAM,CAACE,YAAY,eAAeG,MAAM,CAAC,KAAO,UAAUgB,KAAK,UAAU,CAACrB,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,IAAI,CAACE,YAAY,sBAAsBJ,EAAIqB,GAAG,gBAAgBnB,EAAG,YAAY,CAACI,YAAY,CAAC,MAAQ,SAASC,MAAM,CAAC,KAAO,QAAQY,GAAG,CAAC,OAASnB,EAAImD,kBAAkB3C,MAAM,CAACC,MAAOT,EAAIoD,UAAWzC,SAAS,SAAUC,GAAMZ,EAAIoD,UAAUxC,GAAKC,WAAW,cAAc,CAACX,EAAG,YAAY,CAACK,MAAM,CAAC,MAAQ,KAAK,MAAQ,QAAQL,EAAG,YAAY,CAACK,MAAM,CAAC,MAAQ,KAAK,MAAQ,QAAQL,EAAG,YAAY,CAACK,MAAM,CAAC,MAAQ,QAAQ,MAAQ,WAAWL,EAAG,YAAY,CAACK,MAAM,CAAC,MAAQ,SAAS,MAAQ,aAAa,IAAI,GAAGL,EAAG,MAAM,CAACmD,IAAI,aAAajD,YAAY,uBAAuB,GAAGF,EAAG,SAAS,CAACK,MAAM,CAAC,KAAO,KAAK,CAACL,EAAG,UAAU,CAACE,YAAY,aAAaG,MAAM,CAAC,OAAS,UAAU,CAACL,EAAG,MAAM,CAACE,YAAY,eAAeG,MAAM,CAAC,KAAO,UAAUgB,KAAK,UAAU,CAACrB,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,IAAI,CAACE,YAAY,qBAAqBJ,EAAIqB,GAAG,cAAcnB,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,iBAAiB,CAACK,MAAM,CAAC,KAAO,QAAQC,MAAM,CAACC,MAAOT,EAAIsD,YAAa3C,SAAS,SAAUC,GAAMZ,EAAIsD,YAAY1C,GAAKC,WAAW,gBAAgB,CAACX,EAAG,kBAAkB,CAACK,MAAM,CAAC,MAAQ,WAAW,CAACP,EAAIqB,GAAG,UAAUnB,EAAG,kBAAkB,CAACK,MAAM,CAAC,MAAQ,SAAS,CAACP,EAAIqB,GAAG,WAAW,IAAI,KAAKnB,EAAG,MAAM,CAACE,YAAY,kBAAkBG,MAAM,CAAC,GAAK,qBAAqB,IAAI,GAAGL,EAAG,SAAS,CAACE,YAAY,mBAAmBG,MAAM,CAAC,OAAS,KAAK,CAACL,EAAG,SAAS,CAACK,MAAM,CAAC,KAAO,KAAK,CAACL,EAAG,UAAU,CAACE,YAAY,gBAAgBG,MAAM,CAAC,OAAS,UAAU,CAACL,EAAG,MAAM,CAACE,YAAY,kBAAkBG,MAAM,CAAC,KAAO,UAAUgB,KAAK,UAAU,CAACrB,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,IAAI,CAACE,YAAY,iBAAiBJ,EAAIqB,GAAG,cAAcnB,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACF,EAAG,SAAS,CAACK,MAAM,CAAC,KAAO,QAAQ,KAAO,SAAS,CAACP,EAAIqB,GAAG,SAASrB,EAAIwB,IAAG,IAAI+B,MAAOC,yBAAyBtD,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,OAAO,KAAO,mBAAmBY,GAAG,CAAC,MAAQnB,EAAIyD,kBAAkB,CAACzD,EAAIqB,GAAG,SAAS,KAAKnB,EAAG,cAAc,CAACE,YAAY,qBAAqBJ,EAAIc,GAAId,EAAI0D,cAAc,SAAS1C,EAAKc,GAAK,OAAO5B,EAAG,mBAAmB,CAACe,IAAIa,EAAIvB,MAAM,CAAC,UAAYS,EAAK2C,KAAK,MAAQ3C,EAAK4C,MAAM,KAAe,IAAR9B,EAAY,QAAU,WAAW,CAAC5B,EAAG,UAAU,CAACE,YAAY,gBAAgBG,MAAM,CAAC,aAAa,CAAEoC,QAAS,QAAS,OAAS,UAAU,CAACzC,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACJ,EAAIqB,GAAGrB,EAAIwB,GAAGR,EAAK6C,eAAe,MAAK,IAAI,IAAI,IAAI,GAAG3D,EAAG,UAAU,CAACE,YAAY,cAAcE,YAAY,CAAC,aAAa,QAAQC,MAAM,CAAC,OAAS,UAAU,CAACL,EAAG,MAAM,CAACE,YAAY,gBAAgBG,MAAM,CAAC,KAAO,UAAUgB,KAAK,UAAU,CAACrB,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,IAAI,CAACE,YAAY,qBAAqBJ,EAAIqB,GAAG,cAAcnB,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,kBAAkB,MAAQ,IAAIY,GAAG,CAAC,MAAQnB,EAAI8D,eAAe,CAAC9D,EAAIqB,GAAG,WAAW,KAAKnB,EAAG,WAAW,CAACI,YAAY,CAAC,MAAQ,QAAQC,MAAM,CAAC,KAAOP,EAAI+D,kBAAkB,iBAAiB,sBAAsB,oBAAoB,CAACC,WAAW,UAAWJ,MAAM,WAAW,OAAS,GAAG,OAAS,KAAK,CAAC1D,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,OAAO,MAAQ,OAAO,MAAQ,SAASL,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,QAAQ,MAAQ,MAAM,MAAQ,SAASL,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,aAAa,MAAQ,OAAO,MAAQ,SAASL,EAAG,kBAAkB,CAACK,MAAM,CAAC,KAAO,QAAQ,MAAQ,MAAM0D,YAAYjE,EAAIkE,GAAG,CAAC,CAACjD,IAAI,UAAUkD,GAAG,SAASC,GAAO,MAAO,CAAClE,EAAG,SAAS,CAACK,MAAM,CAAC,KAAO,QAAQ,KAAOP,EAAIqE,gBAAgBD,EAAME,IAAIxB,SAAS,CAAC9C,EAAIqB,GAAG,IAAIrB,EAAIwB,GAAG4C,EAAME,IAAIxB,OAAO,cAAc5C,EAAG,kBAAkB,CAACK,MAAM,CAAC,MAAQ,KAAK,MAAQ,OAAO0D,YAAYjE,EAAIkE,GAAG,CAAC,CAACjD,IAAI,UAAUkD,GAAG,SAASC,GAAO,MAAO,CAAClE,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,OAAO,KAAO,SAASY,GAAG,CAAC,MAAQ,SAASkB,GAAQ,OAAOrC,EAAIuE,WAAWH,EAAME,QAAQ,CAACtE,EAAIqB,GAAG,kBAAkB,IAAI,IAAI,IAEpiQmD,EAAkB,CAAC,WAAY,IAAIxE,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,KAAK,CAACE,YAAY,cAAc,CAACJ,EAAIqB,GAAG,YAAYnB,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACJ,EAAIqB,GAAG,0B,YC2NpM,GACfoD,KAAA,gBACAC,OACA,MAAAC,EAAA,IAAApB,KACAqB,EAAAD,EAAAE,cAAAC,MAAA,MAEAC,EAAA,KAAAC,EAAA,IAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,GAAAC,EAAA,GACAC,EAAA,GAAAC,EAAA,IAAAC,EAAA,GAAAC,GAAA,IAAAC,EAAA,EAAAC,EAAA,EACAzD,EAAA,CACA,CAAAE,MAAA,OAAA1B,MAAAsE,EAAA,IAAAjC,MAAAuC,EAAA9C,KAAA,eAAAW,OAAA,MAAAmC,MACA,CAAAlD,MAAA,OAAA1B,MAAAuE,EAAA,IAAAlC,MAAAwC,EAAA/C,KAAA,0BAAAW,OAAA,MAAAoC,MACA,CAAAnD,MAAA,QAAA1B,MAAAwE,EAAA,IAAAnC,MAAAyC,EAAAhD,KAAA,iBAAAW,OAAA,KAAAqC,EAAA,WAAAA,EAAAI,QAAA,OACA,CAAAxD,MAAA,SAAA1B,MAAAyE,EAAApC,MAAA0C,EAAAjD,KAAA,gBAAAW,OAAA,KAAAsC,EAAA,WAAAA,KACA,CAAArD,MAAA,OAAA1B,MAAA0E,EAAA,IAAArC,MAAA2C,EAAAlD,KAAA,iBAAAW,OAAA,KAAAuC,EAAA,eACA,CAAAtD,MAAA,OAAA1B,MAAA2E,EAAA,IAAAtC,MAAA4C,EAAAnD,KAAA,uBAAAW,OAAA,KAAAwC,EAAA,gBAEAE,EAAA,CACA,qCACA,+BACA,wCACA,yCACA,2BACA,4BAEAC,EAAA,CACA,CAAAC,KAAA,KAAArF,MAAAsE,EAAA,IAAAgB,WAAAnB,EAAA,SAAA9B,MAAA,KACA,CAAAgD,KAAA,KAAArF,MAAAuE,EAAA,IAAAe,WAAAnB,EAAA,SAAA9B,MAAA,KACA,CAAAgD,KAAA,KAAArF,MAAAwE,GAAA,YAAAc,WAAAnB,EAAA,SAAA9B,MAAAyC,EAAA,WACA,CAAAO,KAAA,KAAArF,MAAAyE,EAAA,cAAAa,WAAAnB,EAAA,SAAA9B,MAAA0C,EAAA,WACA,CAAAM,KAAA,KAAArF,MAAA0E,EAAA,IAAAY,WAAAnB,EAAA,SAAA9B,MAAA2C,EAAA,WACA,CAAAK,KAAA,KAAArF,MAAA2E,EAAA,IAAAW,WAAAnB,EAAA,SAAA9B,MAAA4C,EAAA,YAEAjE,EAAA,CACA,CAAAG,MAAA,IAAAI,KAAA,kCACA,CAAAJ,MAAA,IAAAI,KAAA,wCACA,CAAAJ,MAAA,IAAAI,KAAA,iCACA,CAAAJ,MAAA,IAAAI,KAAA,2BAEA0B,EAAA,CACA,CAAAC,KAAAiB,EAAA,SAAAf,QAAA,6BAAAD,MAAA,WACA,CAAAD,KAAAiB,EAAA,SAAAf,QAAA,qBAAAD,MAAA,WACA,CAAAD,KAAAiB,EAAA,SAAAf,QAAA,wBAAAD,MAAA,WACA,CAAAD,KAAAiB,EAAA,SAAAf,QAAA,sBAAAD,MAAA,YAEA,OACAlD,aAAA,GACAK,YAAA,CACA,CAAAG,MAAA,KAAAT,MAAA,IACA,CAAAS,MAAA,KAAAT,MAAA,MACA,CAAAS,MAAA,KAAAT,MAAA,MACA,CAAAS,MAAA,KAAAT,MAAA,MACA,CAAAS,MAAA,KAAAT,MAAA,MACA,CAAAS,MAAA,KAAAT,MAAA,MACA,CAAAS,MAAA,KAAAT,MAAA,OAEAwB,YACA2D,WACAC,YACApE,WACAiC,eACAN,UAAA,KACAE,YAAA,WAGA0C,SAAA,CACAjC,oBACA,YAAArD,aACA,KAAAmF,UAAAnE,OAAA4C,KAAAwB,OAAA,KAAApF,cADA,KAAAmF,YAIAI,UACA,KAAAC,iBACA,KAAAC,WAEA,KAAAC,cAAAC,YAAA,KAAAC,aAAA,MAEAC,QAAA,CACAJ,WACA,GAAAK,OAAAC,KACA,KAAAC,cACA,CACA,MAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAAb,KAAA,kBACAa,EAAAG,OAAA,EACAH,EAAAI,IAAA,0EACAJ,EAAAK,OAAA,KACA,KAAAN,WAEAE,SAAAK,KAAAC,YAAAP,KAGAT,iBACA,SAAAiB,MAAAC,WAAA,OACA,MAAAC,EAAAC,UAAA,KAAAH,MAAAC,YACAC,EAAAE,UAAA,CACAC,QAAA,CAAAC,QAAA,QACAC,OAAA,CAAAhD,KAAA,4CACAiD,MAAA,CAAA7B,KAAA,WAAApB,KAAA,iCACAkD,MAAA,CAAA9B,KAAA,SACA+B,OAAAC,OAAAC,KAAA,KAAAnC,UAAAoC,IAAA/G,IAAA,CACAwD,KAAAxD,EACA6E,KAAA,OACApB,KAAA,KAAAkB,SAAA3E,GACAgH,YAAA,EACAC,UAAA,CAAAC,MAAAlH,IAAA,KAAAmC,UAAA,MAAAgF,QAAAnH,IAAA,KAAAmC,UAAA,MACAiF,SAAA,CAAAC,MAAA,gBAIA5B,UAEA,MAAA6B,EAAA,mBAGA,KAAAP,IAAA,IAAAxB,OAAAC,KAAA+B,IAAA,gBACAC,KAAA,GACAF,SACAG,SAAA,KACAC,MAAA,GACAC,SAAA,sBACAC,SAAA,2BAIA,KAAAb,IAAAc,WAAA,IAAAtC,OAAAC,KAAAsC,OACA,KAAAf,IAAAc,WAAA,IAAAtC,OAAAC,KAAAuC,SACA,KAAAhB,IAAAc,WAAA,IAAAtC,OAAAC,KAAAwC,SAGA,MAAAC,EAAA,IAAA1C,OAAAC,KAAA0C,eAAA,CACAvH,MAAA,WACAwH,YAAA,IAGAF,EAAAG,OAAA,OAAAC,EAAAC,KACA,gBAAAD,EAAA,CACA,MAAAE,EAAAD,EAAAE,aAAA,GAAAC,WACAC,EAAA,IAAAnD,OAAAC,KAAAmD,QAAA,CACAC,KAAAL,EACAM,aAAA,EACAC,YAAA,UACAC,UAAA,UACAC,YAAA,KAEA,KAAAjC,IAAAkC,IAAAP,GACA,KAAA3B,IAAAmC,WAAA,CAAAR,OAKA,MAAAS,EAAA,CACA,CAAA3F,KAAA,OAAA4F,SAAA,mBAAA5J,MAAA,GAAAmD,MAAA,WACA,CAAAa,KAAA,MAAA4F,SAAA,iBAAA5J,MAAA,GAAAmD,MAAA,WACA,CAAAa,KAAA,MAAA4F,SAAA,mBAAA5J,MAAA,GAAAmD,MAAA,YAGAwG,EAAAE,QAAAC,IAEA,MAAAC,EAAA,IAAAhE,OAAAC,KAAAgE,OAAA,CACAJ,SAAAE,EAAAF,SACAlI,MAAAoI,EAAA9F,KACAuD,IAAA,KAAAA,IACAzF,KAAA,IAAAiE,OAAAC,KAAAiE,KAAA,CACAC,KAAA,IAAAnE,OAAAC,KAAAmE,KAAA,OACAC,MAAA,0DACAC,UAAA,IAAAtE,OAAAC,KAAAmE,KAAA,WAKAG,EAAA,IAAAvE,OAAAC,KAAAuE,WAAA,CACAnH,QAAA,yEACA0G,EAAA9F,kDACA8F,EAAA9J,8BAEAwK,OAAA,IAAAzE,OAAAC,KAAAyE,MAAA,SAIAV,EAAArJ,GAAA,aACA4J,EAAAI,KAAA,KAAAnD,IAAAwC,EAAAY,iBAIA,MAAAC,EAAA,IAAA7E,OAAAC,KAAA6E,OAAA,CACA/C,OAAAgC,EAAAF,SACAkB,OAAA,IAAAhB,EAAA9J,MACAuJ,UAAAO,EAAA3G,MACAqG,YAAA,GACAF,YAAAQ,EAAA3G,MACAkG,aAAA,EACA9B,IAAA,KAAAA,MAGA,KAAAwD,QAAAC,KAAAjB,EAAAa,KAIA,KAAAK,OAAA,cAAAC,IACA,KAAA3D,MACA,SAAA2D,EAEA,KAAAC,QACA,KAAAA,QAAAC,OAAA,KAAA7D,KAEA,KAAA8D,gBAIA,KAAAF,SACA,KAAAA,QAAAC,OAAA,UAMAC,gBACA,IAAAtF,OAAAC,OAAAD,OAAAC,KAAAsF,QAAA,OAGA,MAAAC,EAAA,CACAC,IAAA,IACAvH,KAAA,CACA,CAAAwH,IAAA,SAAAC,IAAA,QAAAC,MAAA,IACA,CAAAF,IAAA,QAAAC,IAAA,OAAAC,MAAA,IACA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,IAEA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,IACA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,IACA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,IACA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,IACA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,IACA,CAAAF,IAAA,SAAAC,IAAA,QAAAC,MAAA,MAKA,KAAAR,QAAA,IAAApF,OAAAC,KAAAsF,QAAA,KAAA/D,IAAA,CACAuD,OAAA,GACAnD,QAAA,OACAiE,SAAA,CACA,UACA,uBACA,oBACA,YACA,WAKA,KAAAT,QAAAU,WAAAN,IAEA1J,gBAAAJ,GACA,KAAAqK,SAAA,CAAAC,QAAA,OAAAtK,EAAAC,mBAAA2D,KAAA,UAEA3C,mBACA,SAAAgE,MAAAC,WAAA,OACA,MAAAC,EAAAC,UAAA,KAAAH,MAAAC,YAEAqF,EAAA,CACA,eACA,eACA,kBACA,oBAGApF,EAAAE,UAAA,CACAC,QAAA,CACAC,QAAA,OACAiF,gBAAA,2BACAC,YAAA,OACAC,YAAA,EACAC,UAAA,CACAjJ,MAAA,WAEAkJ,UAAAC,IACA,MAAArI,EAAAqI,EAAA,GACA,SAAArI,EAAAD,YAAAC,EAAAsI,eAAAtI,EAAAjE,UAGAwM,KAAA,CACAC,KAAA,KACAC,MAAA,KACAC,OAAA,KACAC,cAAA,GAEA1F,MAAA,CACA7B,KAAA,WACApB,KAAA,gCACA4I,SAAA,CACApF,UAAA,CACAtE,MAAA,SAGA2J,SAAA,CACAC,MAAA,GAEAC,UAAA,CACA7J,MAAA,YAGAgE,MAAA,CACA9B,KAAA,QACAwH,SAAA,CACAE,MAAA,GAEAD,SAAA,CACAC,MAAA,GAEAE,UAAA,CACAxF,UAAA,CACAtE,MAAA,OACAkC,KAAA,WAGA2H,UAAA,CACA7J,MAAA,YAGAiE,OAAAC,OAAAC,KAAA,KAAAnC,UAAAoC,IAAA/G,IAAA,CACAwD,KAAAxD,EACA6E,KAAA,OACApB,KAAA,KAAAkB,SAAA3E,GACAgH,WAAAhH,IAAA,KAAAmC,UACAuK,WAAA,EACAzF,UAAA,CACAC,MAAAlH,IAAA,KAAAmC,UAAA,IACAgF,QAAAnH,IAAA,KAAAmC,UAAA,KACAQ,MAAA6I,EAAAxL,IAAA,WAEA2M,UAAA,CACAhK,MAAA6I,EAAAxL,IAAA,WAEA4M,UAAA5M,IAAA,KAAAmC,UAAA,CACAQ,MAAA,IAAA0D,aAAAwG,eAAA,SACA,CAAA7C,OAAA,EAAArH,MAAA6I,EAAAxL,GAAAwL,EAAAxL,GAAA8M,QAAA,cAAAA,QAAA,yCACA,CAAA9C,OAAA,EAAArH,MAAA6I,EAAAxL,GAAAwL,EAAAxL,GAAA8M,QAAA,eAAAA,QAAA,6CAEA,KACA1F,SAAA,CACAC,MAAA,SACAJ,UAAA,CACAC,MAAA,UAMA7B,eAEA,MAAA0H,EAAA,IAAAzK,KACAqB,EAAAoJ,EAAAnJ,cAAAC,MAAA,MACAmJ,EAAAD,EAAAE,eAAAC,OAAA,KAGAC,EAAA,CACA,CACAvK,QAAA,YAAAwK,uBAAA,MAAAC,KAAAC,UAAA5I,QAAA,MAAA2I,KAAAC,SAAA,yBAAAD,KAAAC,UAAA5I,QAAA,KACA/B,MAAA,WAEA,CACAC,QAAA,cAAA2K,uBACA5K,MAAA,WAEA,CACAC,QAAA,kBAAAyK,KAAAG,MAAA,GAAAH,KAAAC,iBAAAD,KAAAC,SAAA,eACA3K,MAAA,WAEA,CACAC,QAAA,QAAA6K,2BAAAJ,KAAAC,SAAA,eAAAD,KAAAG,MAAA,GAAAH,KAAAC,aACA3K,MAAA,WAEA,CACAC,QAAA,QAAA8K,sBAAA,KAAAC,qBACAhL,MAAA,YAIA9B,EAAAwM,KAAAG,MAAAH,KAAAC,SAAAH,EAAAvM,QACA,KAAA6B,aAAAmL,QAAA,CAAAlL,KAAA,GAAAiB,KAAAqJ,OAAAG,EAAAtM,KACA,KAAA4B,aAAA7B,OAAA,QAAA6B,aAAAqB,OAGAsJ,eACA,MAAAS,GAAA,IAAAvL,MAAAwL,WACA,OAAAD,GAAA,GAAAA,GAAA,QACAA,GAAA,IAAAA,GAAA,SACA,MAGAN,uBACA,MAAAQ,EAAA,uBACAC,EAAA,sDACAC,EAAA,gCAEA,OAAAF,EAAAV,KAAAG,MAAAH,KAAAC,SAAAS,EAAAnN,SACAoN,EAAAX,KAAAG,MAAAH,KAAAC,SAAAU,EAAApN,SACAqN,EAAAZ,KAAAG,MAAAH,KAAAC,SAAAW,EAAArN,UAGA6M,oBACA,MAAAS,EAAA,uDACA,OAAAA,EAAAb,KAAAG,MAAAH,KAAAC,SAAAY,EAAAtN,UAGA8M,kBACA,MAAAS,EAAA,iDACA,OAAAA,EAAAd,KAAAG,MAAAH,KAAAC,SAAAa,EAAAvN,UAGA+M,iBACA,MAAAS,EAAA,6CACA,OAAAA,EAAAf,KAAAG,MAAAH,KAAAC,SAAAc,EAAAxN,UAEA4B,kBACA,KAAA6C,eACA,KAAAiG,SAAA+C,QAAA,cAEAxL,eAEA,MAAAa,EAAA,IAAApB,KACAqB,EAAAD,EAAAE,cAAAC,MAAA,MAGAC,EAAA,QAAAuJ,KAAAC,SACAvJ,EAAA,KAAAsJ,KAAAG,MAAA,IAAAH,KAAAC,UACAtJ,GAAA,KAAAqJ,KAAAC,UAAA5I,QAAA,GACAT,GAAA,OAAAoJ,KAAAC,UAAA5I,QAAA,GACAR,EAAA,GAAAmJ,KAAAG,MAAA,EAAAH,KAAAC,UACAnJ,EAAA,GAAAkJ,KAAAG,MAAA,EAAAH,KAAAC,UAGAhJ,GAAA+I,KAAAC,SAAA,gBAAAD,KAAAC,UACA/I,GAAA8I,KAAAC,SAAA,kBAAAD,KAAAC,UACA9I,EAAA6I,KAAAC,SAAA,OACA7I,EAAA4I,KAAAC,SAAA,OAEAgB,EAAA,kDACA,KAAA1J,UAAA,CACA,CAAAC,KAAA,KAAArF,MAAAsE,EAAAY,QAAA,OAAAI,WAAA,GAAAnB,KAAA2K,EAAA,KAAAzM,MAAA,KACA,CAAAgD,KAAA,KAAArF,MAAAuE,EAAA,IAAAe,WAAA,GAAAnB,KAAA2K,EAAA,KAAAzM,MAAA,KACA,CAAAgD,KAAA,KAAArF,MAAAwE,GAAA,YAAAc,WAAA,GAAAnB,KAAA2K,EAAA,KAAAzM,MAAAyC,EAAA,WACA,CAAAO,KAAA,KAAArF,MAAAyE,EAAA,cAAAa,WAAA,GAAAnB,KAAA2K,EAAA,KAAAzM,MAAA0C,EAAA,WACA,CAAAM,KAAA,KAAArF,MAAA0E,EAAA,IAAAY,WAAA,GAAAnB,KAAA2K,EAAA,KAAAzM,MAAA2C,EAAA,WACA,CAAAK,KAAA,KAAArF,MAAA2E,EAAA,IAAAW,WAAA,GAAAnB,KAAA2K,EAAA,KAAAzM,MAAA4C,EAAA,YAEA,KAAA6G,SAAA+C,QAAA,cAEAlO,aACA,KAAA0C,eACA,KAAAwC,eACA,KAAAnD,mBACA,KAAAoJ,SAAA+C,QAAA,YAGAhO,eACA,MAAAkO,EAAAlB,KAAAG,MAAA,IAAAH,KAAAC,UAAA,EACA,KAAAkB,OAAA,aAAAD,OAAA,UAAAE,kBAAA,KAAA5J,KAAA,aAEAtD,WAAAN,GAEA,eAAAA,EAAAC,OAAA,SAAAD,EAAAC,MACAwN,OAAAzN,EAAAY,OAEA8M,WAAA1N,EAAAY,QAEAL,SAAAP,GACA,eAAAA,EAAAC,OAAA,SAAAD,EAAAC,MACAmM,KAAAuB,IAAAF,OAAAzN,EAAAY,QAEAwL,KAAAuB,IAAAD,WAAA1N,EAAAY,QAAA6C,QAAA,IAEA1C,YAAAf,GACA,MAAA4N,EAAA,KAAAtN,WAAAN,GACA,OAAA4N,EAAA,MACAA,EAAA,MACA,IAEApN,UAAAR,GACA,eAAAA,EAAAC,MAAA,IACA,SAAAD,EAAAC,MAAA,IACA,KAEAY,WAAAb,GACA,MAAA4N,EAAA,KAAAtN,WAAAN,GACA,OAAA4N,EAAA,aACAA,EAAA,eACA,cAEA1N,aAAAF,GACA,eAAAA,EAAAC,MAAA,cACA,SAAAD,EAAAC,MAAA,gBACA,UAAAD,EAAAC,MAAA,mBACA,WAAAD,EAAAC,MAAA,eACA,SAAAD,EAAAC,MAAA,eACA,SAAAD,EAAAC,MAAA,iBACA,IAEAkC,gBAAAvB,GACA,YAAAA,EAAA,UACA,MAAAA,EAAA,SACA,QAEAyB,WAAAD,GACA,KAAAiI,SAAA,CACAC,QAAA,KAAAlI,EAAAwB,aACAA,KAAA,WAIAiK,gBACA,KAAA/H,KACA,KAAAA,IAAAgI,UAEA,KAAA5J,eACA6J,cAAA,KAAA7J,iBChuB+V,I,wBCQ3V8J,EAAY,eACd,EACAnQ,EACAyE,GACA,EACA,KACA,WACA,MAIa,aAAA0L,E,6CCnBf","file":"js/chunk-5a3cb1cb.a1ba0c0c.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"region-insight-page\"},[_c('div',{staticClass:\"page-header\"},[_vm._m(0),_c('div',{staticClass:\"header-actions\"},[_c('el-select',{staticStyle:{\"width\":\"140px\",\"margin-right\":\"10px\"},attrs:{\"placeholder\":\"选择数据类型\",\"size\":\"small\"},model:{value:(_vm.selectedType),callback:function ($$v) {_vm.selectedType=$$v},expression:\"selectedType\"}},_vm._l((_vm.typeOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('el-button',{staticStyle:{\"margin-right\":\"10px\"},attrs:{\"type\":\"primary\",\"icon\":\"el-icon-refresh\",\"size\":\"small\"},on:{\"click\":_vm.refreshAll}},[_vm._v(\"刷新数据\")]),_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-download\",\"size\":\"small\"},on:{\"click\":_vm.exportReport}},[_vm._v(\"导出报告\")])],1)]),_c('div',{staticClass:\"notification-area\"},[_c('el-alert',{staticClass:\"dashboard-announcement\",attrs:{\"title\":'区域动态：太白湖新区区域状况洞察平台已更新，数据实时同步中',\"type\":\"info\",\"show-icon\":\"\",\"closable\":false}}),_c('el-alert',{staticClass:\"dashboard-update\",attrs:{\"title\":\"今日数据已全部更新完成，最后更新时间：09:30\",\"type\":\"success\",\"show-icon\":\"\",\"closable\":false}})],1),_c('el-card',{staticClass:\"warning-card\"},[_c('div',{staticClass:\"warning-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('i',{staticClass:\"el-icon-warning-outline\"}),_c('span',[_vm._v(\"智能预警与建议\")]),_c('el-tag',{staticClass:\"warning-count\",attrs:{\"size\":\"small\",\"type\":\"danger\"}},[_vm._v(_vm._s(_vm.warnings.filter(w => w.level === '高').length)+\"个高级预警\")])],1),_c('div',{staticClass:\"warning-content\"},_vm._l((_vm.warnings),function(item,idx){return _c('div',{key:idx,staticClass:\"warning-item\",class:{'high-warning': item.level === '高', 'medium-warning': item.level === '中'}},[_c('div',{staticClass:\"warning-icon\"},[(item.level === '高')?_c('i',{staticClass:\"el-icon-warning\"}):_c('i',{staticClass:\"el-icon-info\"})]),_c('div',{staticClass:\"warning-text\"},[_c('div',{staticClass:\"warning-level\"},[_vm._v(_vm._s(item.level)+\"级预警\")]),_c('div',{staticClass:\"warning-message\"},[_vm._v(_vm._s(item.text))])]),_c('el-button',{staticClass:\"warning-action\",attrs:{\"size\":\"mini\",\"type\":\"primary\"}},[_vm._v(\"处理\")])],1)}),0)]),_c('div',{staticClass:\"data-cards\"},[_c('el-row',{attrs:{\"gutter\":20}},_vm._l((_vm.statCards),function(card){return _c('el-col',{key:card.title,attrs:{\"span\":4}},[_c('div',{staticClass:\"stat-card\",class:_vm.getCardClass(card),on:{\"click\":function($event){return _vm.handleCardClick(card)}}},[_c('div',{staticClass:\"card-icon\"},[_c('i',{class:card.icon})]),_c('div',{staticClass:\"card-content\"},[_c('div',{staticClass:\"card-title\"},[_vm._v(_vm._s(card.title))]),_c('div',{staticClass:\"card-value\"},[_vm._v(_vm._s(card.value))]),_c('div',{staticClass:\"card-trend\"},[(_vm.trendValue(card) > 0)?_c('span',{staticClass:\"trend-up\"},[_c('i',{staticClass:\"el-icon-top\"}),_vm._v(\" +\"+_vm._s(_vm.trendAbs(card))+_vm._s(_vm.trendUnit(card))+\" \")]):(_vm.trendValue(card) < 0)?_c('span',{staticClass:\"trend-down\"},[_c('i',{staticClass:\"el-icon-bottom\"}),_vm._v(\" -\"+_vm._s(_vm.trendAbs(card))+_vm._s(_vm.trendUnit(card))+\" \")]):_c('span',{staticClass:\"trend-flat\"},[_c('i',{staticClass:\"el-icon-right\"}),_vm._v(\" 持平 \")])])])])])}),1)],1),_c('el-row',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"gutter\":20}},_vm._l((_vm.statCards),function(card){return _c('el-col',{key:card.title,attrs:{\"span\":4}},[_c('el-card',{staticClass:\"stat-card dashboard-card\",attrs:{\"body-style\":{ padding: '20px' }},nativeOn:{\"click\":function($event){return _vm.handleCardClick(card)}}},[_c('div',{staticClass:\"card-title\"},[_c('i',{class:card.icon}),_vm._v(\" \"+_vm._s(card.title)+\" \")]),_c('div',{staticClass:\"card-value\"},[_c('span',{staticClass:\"main-value\"},[_vm._v(_vm._s(card.value))]),(card.trend !== undefined)?_c('span',{staticClass:\"trend-block\",class:_vm.trendClass(card)},[(_vm.trendValue(card) > 0)?_c('i',{staticClass:\"el-icon-caret-top\"}):(_vm.trendValue(card) < 0)?_c('i',{staticClass:\"el-icon-caret-bottom\"}):_vm._e(),_c('span',{staticClass:\"trend-num\"},[_vm._v(\" \"+_vm._s(_vm.trendPrefix(card))+_vm._s(_vm.trendAbs(card))+_vm._s(_vm.trendUnit(card))+\" \")])]):_vm._e()]),_c('div',{staticClass:\"card-footer\"},[_vm._v(_vm._s(card.footer))])])],1)}),1),_c('el-row',{staticClass:\"chart-section\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"chart-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"chart-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"chart-title\"},[_c('i',{staticClass:\"el-icon-data-line\"}),_vm._v(\" 区域数据趋势分析 \")]),_c('el-select',{staticStyle:{\"width\":\"120px\"},attrs:{\"size\":\"mini\"},on:{\"change\":_vm.updateTrendChart},model:{value:(_vm.trendType),callback:function ($$v) {_vm.trendType=$$v},expression:\"trendType\"}},[_c('el-option',{attrs:{\"label\":\"人口\",\"value\":\"人口\"}}),_c('el-option',{attrs:{\"label\":\"企业\",\"value\":\"企业\"}}),_c('el-option',{attrs:{\"label\":\"环境优良率\",\"value\":\"环境优良率\"}}),_c('el-option',{attrs:{\"label\":\"交通拥堵指数\",\"value\":\"交通拥堵指数\"}})],1)],1),_c('div',{ref:\"trendChart\",staticClass:\"chart-container\"})])],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"chart-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"chart-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"chart-title\"},[_c('i',{staticClass:\"el-icon-location\"}),_vm._v(\" 区域分布分析 \")]),_c('div',{staticClass:\"chart-actions\"},[_c('el-radio-group',{attrs:{\"size\":\"mini\"},model:{value:(_vm.mapViewMode),callback:function ($$v) {_vm.mapViewMode=$$v},expression:\"mapViewMode\"}},[_c('el-radio-button',{attrs:{\"label\":\"normal\"}},[_vm._v(\"常规视图\")]),_c('el-radio-button',{attrs:{\"label\":\"heat\"}},[_vm._v(\"热力视图\")])],1)],1)]),_c('div',{staticClass:\"chart-container\",attrs:{\"id\":\"mapContainer\"}})])],1)],1),_c('el-row',{staticClass:\"realtime-section\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":24}},[_c('el-card',{staticClass:\"realtime-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"realtime-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"realtime-title\"},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\" 区域实时动态 \")]),_c('div',{staticClass:\"realtime-actions\"},[_c('el-tag',{attrs:{\"size\":\"small\",\"type\":\"info\"}},[_vm._v(\"最近更新: \"+_vm._s(new Date().toLocaleTimeString()))]),_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-refresh\"},on:{\"click\":_vm.refreshRealtime}},[_vm._v(\"刷新\")])],1)]),_c('el-timeline',{staticClass:\"realtime-timeline\"},_vm._l((_vm.realtimeList),function(item,idx){return _c('el-timeline-item',{key:idx,attrs:{\"timestamp\":item.time,\"color\":item.color,\"size\":idx === 0 ? 'large' : 'normal'}},[_c('el-card',{staticClass:\"timeline-card\",attrs:{\"body-style\":{ padding: '10px' },\"shadow\":\"hover\"}},[_c('div',{staticClass:\"timeline-content\"},[_vm._v(_vm._s(item.content))])])],1)}),1)],1)],1)],1),_c('el-card',{staticClass:\"detail-card\",staticStyle:{\"margin-top\":\"20px\"},attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"detail-header\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"detail-title\"},[_c('i',{staticClass:\"el-icon-document\"}),_vm._v(\" 区域数据明细 \")]),_c('div',{staticClass:\"detail-actions\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"icon\":\"el-icon-refresh\",\"plain\":\"\"},on:{\"click\":_vm.refreshTable}},[_vm._v(\"刷新数据\")])],1)]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.filteredTableData,\"row-class-name\":\"dashboard-table-row\",\"header-cell-style\":{background:'#f5f7fa', color:'#606266'},\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":\"数据类型\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"value\",\"label\":\"当前值\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"updateTime\",\"label\":\"更新时间\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"trend\",\"label\":\"趋势\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"size\":\"small\",\"type\":_vm.getTrendTagType(scope.row.trend)}},[_vm._v(\" \"+_vm._s(scope.row.trend)+\" \")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.viewDetail(scope.row)}}},[_vm._v(\"查看详情\")])]}}])})],1)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"header-left\"},[_c('h2',{staticClass:\"page-title\"},[_vm._v(\"区域状况洞察\")]),_c('div',{staticClass:\"page-subtitle\"},[_vm._v(\"太白湖新区综合数据分析与实时监测\")])])\n}]\n\nexport { render, staticRenderFns }","/* eslint-disable */\n<template>\n  <div class=\"region-insight-page\">\n    <!-- 页面标题与操作区 -->\n    <div class=\"page-header\">\n      <div class=\"header-left\">\n        <h2 class=\"page-title\">区域状况洞察</h2>\n        <div class=\"page-subtitle\">太白湖新区综合数据分析与实时监测</div>\n      </div>\n      <div class=\"header-actions\">\n        <el-select v-model=\"selectedType\" placeholder=\"选择数据类型\" size=\"small\" style=\"width: 140px; margin-right: 10px;\">\n          <el-option v-for=\"item in typeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n        </el-select>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"small\" @click=\"refreshAll\" style=\"margin-right: 10px;\">刷新数据</el-button>\n        <el-button type=\"success\" icon=\"el-icon-download\" size=\"small\" @click=\"exportReport\">导出报告</el-button>\n      </div>\n    </div>\n\n    <!-- 数据更新提示与公告 -->\n    <div class=\"notification-area\">\n      <el-alert\n        class=\"dashboard-announcement\"\n        :title=\"'区域动态：太白湖新区区域状况洞察平台已更新，数据实时同步中'\"\n        type=\"info\"\n        show-icon\n        :closable=\"false\"\n      />\n      <el-alert\n        class=\"dashboard-update\"\n        title=\"今日数据已全部更新完成，最后更新时间：09:30\"\n        type=\"success\"\n        show-icon\n        :closable=\"false\"\n      />\n    </div>\n\n    <!-- 智能预警区块 - 升级为卡片式设计 -->\n    <el-card class=\"warning-card\">\n      <div slot=\"header\" class=\"warning-header\">\n        <i class=\"el-icon-warning-outline\"></i>\n        <span>智能预警与建议</span>\n        <el-tag size=\"small\" type=\"danger\" class=\"warning-count\">{{warnings.filter(w => w.level === '高').length}}个高级预警</el-tag>\n      </div>\n      <div class=\"warning-content\">\n        <div v-for=\"(item, idx) in warnings\" :key=\"idx\" \n             class=\"warning-item\" \n             :class=\"{'high-warning': item.level === '高', 'medium-warning': item.level === '中'}\">\n          <div class=\"warning-icon\">\n            <i class=\"el-icon-warning\" v-if=\"item.level === '高'\"></i>\n            <i class=\"el-icon-info\" v-else></i>\n          </div>\n          <div class=\"warning-text\">\n            <div class=\"warning-level\">{{item.level}}级预警</div>\n            <div class=\"warning-message\">{{item.text}}</div>\n          </div>\n          <el-button size=\"mini\" type=\"primary\" class=\"warning-action\">处理</el-button>\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 统计卡片 - 改为现代化设计 -->\n    <div class=\"data-cards\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"4\" v-for=\"card in statCards\" :key=\"card.title\">\n          <div class=\"stat-card\" :class=\"getCardClass(card)\" @click=\"handleCardClick(card)\">\n            <div class=\"card-icon\">\n              <i :class=\"card.icon\"></i>\n            </div>\n            <div class=\"card-content\">\n              <div class=\"card-title\">{{ card.title }}</div>\n              <div class=\"card-value\">{{ card.value }}</div>\n              <div class=\"card-trend\">\n                <span v-if=\"trendValue(card) > 0\" class=\"trend-up\">\n                  <i class=\"el-icon-top\"></i> +{{ trendAbs(card) }}{{ trendUnit(card) }}\n                </span>\n                <span v-else-if=\"trendValue(card) < 0\" class=\"trend-down\">\n                  <i class=\"el-icon-bottom\"></i> -{{ trendAbs(card) }}{{ trendUnit(card) }}\n                </span>\n                <span v-else class=\"trend-flat\">\n                  <i class=\"el-icon-right\"></i> 持平\n                </span>\n              </div>\n            </div>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <el-row :gutter=\"20\" style=\"margin-bottom: 20px;\">\n      <el-col :span=\"4\" v-for=\"card in statCards\" :key=\"card.title\">\n        <el-card class=\"stat-card dashboard-card\" :body-style=\"{ padding: '20px' }\" @click.native=\"handleCardClick(card)\">\n          <div class=\"card-title\">\n            <i :class=\"card.icon\"></i> {{ card.title }}\n          </div>\n          <div class=\"card-value\">\n            <span class=\"main-value\">{{ card.value }}</span>\n            <span v-if=\"card.trend !== undefined\" class=\"trend-block\" :class=\"trendClass(card)\">\n              <i v-if=\"trendValue(card) > 0\" class=\"el-icon-caret-top\"></i>\n              <i v-else-if=\"trendValue(card) < 0\" class=\"el-icon-caret-bottom\"></i>\n              <span class=\"trend-num\">\n                {{ trendPrefix(card) }}{{ trendAbs(card) }}{{ trendUnit(card) }}\n              </span>\n            </span>\n          </div>\n          <div class=\"card-footer\">{{ card.footer }}</div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 增强趋势图表和地图显示 -->\n    <el-row :gutter=\"20\" class=\"chart-section\">\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"chart-header\">\n            <div class=\"chart-title\">\n              <i class=\"el-icon-data-line\"></i>\n              区域数据趋势分析\n            </div>\n            <el-select v-model=\"trendType\" size=\"mini\" style=\"width: 120px;\" @change=\"updateTrendChart\">\n              <el-option label=\"人口\" value=\"人口\" />\n              <el-option label=\"企业\" value=\"企业\" />\n              <el-option label=\"环境优良率\" value=\"环境优良率\" />\n              <el-option label=\"交通拥堵指数\" value=\"交通拥堵指数\" />\n            </el-select>\n          </div>\n          <div ref=\"trendChart\" class=\"chart-container\"></div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"chart-header\">\n            <div class=\"chart-title\">\n              <i class=\"el-icon-location\"></i>\n              区域分布分析\n            </div>\n            <div class=\"chart-actions\">\n              <el-radio-group v-model=\"mapViewMode\" size=\"mini\">\n                <el-radio-button label=\"normal\">常规视图</el-radio-button>\n                <el-radio-button label=\"heat\">热力视图</el-radio-button>\n              </el-radio-group>\n            </div>\n          </div>\n          <div id=\"mapContainer\" class=\"chart-container\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 实时动态部分增强 -->\n    <el-row :gutter=\"20\" class=\"realtime-section\">\n      <el-col :span=\"24\">\n        <el-card class=\"realtime-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"realtime-header\">\n            <div class=\"realtime-title\">\n              <i class=\"el-icon-time\"></i>\n              区域实时动态\n            </div>\n            <div class=\"realtime-actions\">\n              <el-tag size=\"small\" type=\"info\">最近更新: {{ new Date().toLocaleTimeString() }}</el-tag>\n              <el-button type=\"text\" icon=\"el-icon-refresh\" @click=\"refreshRealtime\">刷新</el-button>\n            </div>\n          </div>\n          <el-timeline class=\"realtime-timeline\">\n            <el-timeline-item\n              v-for=\"(item, idx) in realtimeList\"\n              :key=\"idx\"\n              :timestamp=\"item.time\"\n              :color=\"item.color\"\n              :size=\"idx === 0 ? 'large' : 'normal'\"\n            >\n              <el-card class=\"timeline-card\" :body-style=\"{ padding: '10px' }\" shadow=\"hover\">\n                <div class=\"timeline-content\">{{ item.content }}</div>\n              </el-card>\n            </el-timeline-item>\n          </el-timeline>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 数据明细表格增强 -->\n    <el-card class=\"detail-card\" shadow=\"hover\" style=\"margin-top:20px;\">\n      <div slot=\"header\" class=\"detail-header\">\n        <div class=\"detail-title\">\n          <i class=\"el-icon-document\"></i>\n          区域数据明细\n        </div>\n        <div class=\"detail-actions\">\n          <el-button type=\"primary\" size=\"small\" icon=\"el-icon-refresh\" @click=\"refreshTable\" plain>刷新数据</el-button>\n        </div>\n      </div>\n      <el-table \n        :data=\"filteredTableData\" \n        style=\"width:100%\" \n        row-class-name=\"dashboard-table-row\"\n        :header-cell-style=\"{background:'#f5f7fa', color:'#606266'}\"\n        border\n        stripe\n      >\n        <el-table-column prop=\"type\" label=\"数据类型\" width=\"120\" />\n        <el-table-column prop=\"value\" label=\"当前值\" width=\"120\" />\n        <el-table-column prop=\"updateTime\" label=\"更新时间\" width=\"180\" />\n        <el-table-column prop=\"trend\" label=\"趋势\">\n          <template slot-scope=\"scope\">\n            <el-tag size=\"small\" :type=\"getTrendTagType(scope.row.trend)\">\n              {{ scope.row.trend }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" size=\"small\" @click=\"viewDetail(scope.row)\">查看详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'RegionInsight',\n  data() {\n    const today = new Date();\n    const dateStr = today.toISOString().slice(0, 10);\n    // 使用更真实的太白湖新区数据\n    const pop = 28.5, ent = 920, env = 92.5, traffic = 2.34, med = 12, edu = 35;\n    const popTrend = 0.6, entTrend = 1.2, envTrend = 0.4, trafficTrend = -0.05, medTrend = 1, eduTrend = 0;\n    const statCards = [\n      { title: '人口总数', value: `${pop}万`, trend: popTrend, icon: 'el-icon-user', footer: `环比+${popTrend}%` },\n      { title: '企业数量', value: `${ent}家`, trend: entTrend, icon: 'el-icon-office-building', footer: `环比+${entTrend}%` },\n      { title: '环境优良率', value: `${env}%`, trend: envTrend, icon: 'el-icon-s-flag', footer: `环比${envTrend > 0 ? '+' : ''}${envTrend.toFixed(1)}%` },\n      { title: '交通拥堵指数', value: traffic, trend: trafficTrend, icon: 'el-icon-truck', footer: `环比${trafficTrend > 0 ? '+' : ''}${trafficTrend}` },\n      { title: '医疗资源', value: `${med}家`, trend: medTrend, icon: 'el-icon-s-help', footer: `环比${medTrend > 0 ? '+1' : '0'}家` },\n      { title: '教育资源', value: `${edu}所`, trend: eduTrend, icon: 'el-icon-s-management', footer: `环比${eduTrend > 0 ? '+1' : '0'}所` }\n    ];\n    const trendMap = {\n      '人口': [26.8, 27.3, 27.7, 28.1, 28.5, 28.9],\n      '企业': [900, 950, 900, 920, 952, 960],\n      '环境优良率': [90.5, 91.2, 91.8, 92.2, 92.5, 92.8],\n      '交通拥堵指数': [2.45, 2.42, 2.39, 2.36, 2.34, 2.32],\n      '医疗资源': [10, 10, 11, 11, 12, 12],\n      '教育资源': [33, 34, 35, 35, 35, 35]\n    };\n    const tableData = [\n      { type: '人口', value: `${pop}万`, updateTime: `${dateStr} 08:00`, trend: '↑' },\n      { type: '企业', value: `${ent}家`, updateTime: `${dateStr} 09:00`, trend: '↑' },\n      { type: '环境', value: env >= 90 ? '良' : '一般', updateTime: `${dateStr} 10:00`, trend: envTrend > 0 ? '↑' : '↓' },\n      { type: '交通', value: traffic < 2 ? '畅通' : '轻度拥堵', updateTime: `${dateStr} 11:00`, trend: trafficTrend < 0 ? '↓' : '↑' },\n      { type: '医疗', value: `${med}家`, updateTime: `${dateStr} 12:00`, trend: medTrend > 0 ? '↑' : '→' },\n      { type: '教育', value: `${edu}所`, updateTime: `${dateStr} 13:00`, trend: eduTrend > 0 ? '↑' : '→' }\n    ];\n    const warnings = [\n      { level: '高', text: '环境优良率未达标，主要污染源为工业区废气排放，建议加强监管。' },\n      { level: '高', text: '医疗资源偏少，每万人仅拥有医疗机构0.42家，低于全市平均值0.65家。' },\n      { level: '中', text: '交通拥堵指数处于中等水平，早晚高峰期望湖大道拥堵情况明显。' },\n      { level: '中', text: '教育资源分布不均，新区东部学校数量明显不足。' }\n    ];\n    const realtimeList = [\n      { time: `${dateStr} 08:30`, content: `望湖大道早高峰拥堵指数上升至3.6，较昨日增加0.2`, color: '#F56C6C' },\n      { time: `${dateStr} 09:10`, content: `新注册企业：山东科创智能科技有限公司`, color: '#67C23A' },\n      { time: `${dateStr} 10:15`, content: `空气质量指数(AQI)为72，空气质量良好`, color: '#67C23A' },\n      { time: `${dateStr} 11:00`, content: `太白湖医院今日门诊量同比增长12.5%`, color: '#409EFF' }\n    ];\n    return {\n      selectedType: '',\n      typeOptions: [\n        { label: '全部', value: '' },\n        { label: '人口', value: '人口' },\n        { label: '企业', value: '企业' },\n        { label: '环境', value: '环境' },\n        { label: '交通', value: '交通' },\n        { label: '医疗', value: '医疗' },\n        { label: '教育', value: '教育' }\n      ],\n      statCards,\n      trendMap,\n      tableData,\n      warnings,\n      realtimeList,\n      trendType: '人口',\n      mapViewMode: 'normal',\n    }\n  },\n  computed: {\n    filteredTableData() {\n      if (!this.selectedType) return this.tableData\n      return this.tableData.filter(row => row.type === this.selectedType)\n    },\n  },\n  mounted() {\n    this.initTrendChart()\n    this.loadAMap()\n    // 自动推送实时动态\n    this.realtimeTimer = setInterval(this.pushRealtime, 5000)\n  },\n  methods: {\n    loadAMap() {\n      if (window.AMap) {\n        this.initMap()\n      } else {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.async = true\n        script.src = 'https://webapi.amap.com/maps?v=2.0&key=4e0b6e6e0b6e6e0b6e6e0b6e6e0b6e6e'\n        script.onload = () => {\n          this.initMap()\n        }\n        document.head.appendChild(script)\n      }\n    },\n    initTrendChart() {\n      if (!this.$refs.trendChart) return\n      const chart = echarts.init(this.$refs.trendChart)\n      chart.setOption({\n        tooltip: { trigger: 'axis' },\n        legend: { data: ['人口', '企业', '环境优良率', '交通拥堵指数', '医疗资源', '教育资源'] },\n        xAxis: { type: 'category', data: ['1月', '2月', '3月', '4月', '5月', '6月'] },\n        yAxis: { type: 'value' },\n        series: Object.keys(this.trendMap).map(key => ({\n          name: key,\n          type: 'line',\n          data: this.trendMap[key],\n          showSymbol: false,\n          lineStyle: { width: key === this.trendType ? 3 : 1.5, opacity: key === this.trendType ? 1 : 0.5 },\n          emphasis: { focus: 'series' }\n        }))\n      })\n    },\n    initMap() {\n      // 济宁市中心点坐标\n      const center = [116.5871, 35.4154]\n      \n      // 初始化地图\n      this.map = new window.AMap.Map('mapContainer', {\n        zoom: 11,\n        center: center,\n        viewMode: '3D',\n        pitch: 50,\n        mapStyle: 'amap://styles/fresh',\n        features: ['bg', 'road', 'building']\n      })\n\n      // 添加地图控件\n      this.map.addControl(new window.AMap.Scale())\n      this.map.addControl(new window.AMap.ToolBar())\n      this.map.addControl(new window.AMap.MapType())\n\n      // 添加行政区划\n      const district = new window.AMap.DistrictSearch({\n        level: 'district',\n        subdistrict: 1\n      })\n\n      district.search('济宁市', (status, result) => {\n        if (status === 'complete') {\n          const bounds = result.districtList[0].boundaries\n          const polygon = new window.AMap.Polygon({\n            path: bounds,\n            strokeWeight: 2,\n            strokeColor: '#0091ea',\n            fillColor: '#80d8ff',\n            fillOpacity: 0.2\n          })\n          this.map.add(polygon)\n          this.map.setFitView([polygon])\n        }\n      })\n\n      // 添加标记点\n      const locations = [\n        { name: '太白湖区', position: [116.5871, 35.4154], value: 80, color: '#0091ea' },\n        { name: '任城区', position: [116.5950, 35.4140], value: 60, color: '#00b0ff' },\n        { name: '兖州区', position: [116.7833, 35.5528], value: 40, color: '#40c4ff' }\n      ]\n\n      locations.forEach(location => {\n        // 创建标记\n        const marker = new window.AMap.Marker({\n          position: location.position,\n          title: location.name,\n          map: this.map,\n          icon: new window.AMap.Icon({\n            size: new window.AMap.Size(25, 34),\n            image: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n            imageSize: new window.AMap.Size(25, 34)\n          })\n        })\n\n        // 创建信息窗体\n        const infoWindow = new window.AMap.InfoWindow({\n          content: `<div style=\"padding:10px;\">\n            <h4 style=\"margin:0 0 5px 0\">${location.name}</h4>\n            <p style=\"margin:0\">数据值：${location.value}</p>\n          </div>`,\n          offset: new window.AMap.Pixel(0, -30)\n        })\n\n        // 绑定点击事件\n        marker.on('click', () => {\n          infoWindow.open(this.map, marker.getPosition())\n        })\n\n        // 创建圆形区域\n        const circle = new window.AMap.Circle({\n          center: location.position,\n          radius: location.value * 100,\n          fillColor: location.color,\n          fillOpacity: 0.3,\n          strokeColor: location.color,\n          strokeWeight: 1,\n          map: this.map\n        })\n\n        this.markers.push(marker, circle)\n      })\n\n      // 添加视图模式切换处理\n      this.$watch('mapViewMode', (newMode) => {\n        if (this.map) {\n          if (newMode === 'heat') {\n            // 切换到热力图视图\n            if (this.heatmap) {\n              this.heatmap.setMap(this.map);\n            } else {\n              this.createHeatmap();\n            }\n          } else {\n            // 切换到普通视图\n            if (this.heatmap) {\n              this.heatmap.setMap(null);\n            }\n          }\n        }\n      });\n    },\n    createHeatmap() {\n      if (!window.AMap || !window.AMap.HeatMap) return;\n      \n      // 模拟热力图数据\n      const heatmapData = {\n        max: 100,\n        data: [\n          {lng: 116.5871, lat: 35.4154, count: 80}, // 太白湖区\n          {lng: 116.5950, lat: 35.4140, count: 60}, // 任城区\n          {lng: 116.7833, lat: 35.5528, count: 40}, // 兖州区\n          // 添加更多点位数据\n          {lng: 116.5471, lat: 35.4054, count: 30},\n          {lng: 116.6071, lat: 35.4254, count: 20},\n          {lng: 116.5971, lat: 35.3954, count: 50},\n          {lng: 116.5671, lat: 35.4354, count: 70},\n          {lng: 116.6271, lat: 35.4454, count: 35},\n          {lng: 116.5571, lat: 35.3854, count: 45}\n        ]\n      };\n      \n      // 创建热力图实例\n      this.heatmap = new window.AMap.HeatMap(this.map, {\n        radius: 25,\n        opacity: [0, 0.8],\n        gradient: {\n          0.5: 'blue',\n          0.65: 'rgb(117,211,248)',\n          0.7: 'rgb(0, 255, 0)',\n          0.9: 'yellow',\n          1.0: 'red'\n        }\n      });\n      \n      // 设置热力图数据\n      this.heatmap.setDataSet(heatmapData);\n    },\n    handleCardClick(card) {\n      this.$message({ message: `跳转到\"${card.title}\"相关业务页面（模拟）`, type: 'info' })\n    },\n    updateTrendChart() {\n      if (!this.$refs.trendChart) return;\n      const chart = echarts.init(this.$refs.trendChart);\n      \n      const colors = {\n        '人口': '#409EFF',\n        '企业': '#67C23A',\n        '环境优良率': '#909399',\n        '交通拥堵指数': '#E6A23C'\n      };\n      \n      chart.setOption({\n        tooltip: { \n          trigger: 'axis',\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          borderColor: '#eee',\n          borderWidth: 1,\n          textStyle: {\n            color: '#606266'\n          },\n          formatter: (params) => {\n            const data = params[0];\n            return `${data.name}<br/>${data.seriesName}: ${data.value}`;\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: { \n          type: 'category', \n          data: ['1月', '2月', '3月', '4月', '5月', '6月'],\n          axisLine: {\n            lineStyle: {\n              color: '#ddd'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            color: '#606266'\n          }\n        },\n        yAxis: { \n          type: 'value',\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#eee',\n              type: 'dashed'\n            }\n          },\n          axisLabel: {\n            color: '#606266'\n          }\n        },\n        series: Object.keys(this.trendMap).map(key => ({\n          name: key,\n          type: 'line',\n          data: this.trendMap[key],\n          showSymbol: key === this.trendType,\n          symbolSize: 6,\n          lineStyle: { \n            width: key === this.trendType ? 3 : 1, \n            opacity: key === this.trendType ? 1 : 0.3,\n            color: colors[key] || '#409EFF'\n          },\n          itemStyle: {\n            color: colors[key] || '#409EFF'\n          },\n          areaStyle: key === this.trendType ? {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              { offset: 0, color: colors[key] ? colors[key].replace(')', ', 0.3)').replace('rgb', 'rgba') : 'rgba(64, 158, 255, 0.3)' },\n              { offset: 1, color: colors[key] ? colors[key].replace(')', ', 0.05)').replace('rgb', 'rgba') : 'rgba(64, 158, 255, 0.05)' }\n            ])\n          } : null,\n          emphasis: { \n            focus: 'series',\n            lineStyle: {\n              width: 4\n            }\n          }\n        }))\n      });\n    },\n    pushRealtime() {\n      // 更真实的实时动态数据\n      const now = new Date()\n      const dateStr = now.toISOString().slice(0, 10)\n      const timeStr = now.toTimeString().substr(0, 5)\n      \n      // 更真实的实时动态数据类型\n      const types = [\n        { \n          content: `望湖大道${this.getTimeOfDay()}拥堵指数为${(2 + Math.random() * 1.5).toFixed(1)}，${Math.random() > 0.5 ? '较昨日上升' : '较昨日下降'}${(Math.random() * 0.3).toFixed(1)}`, \n          color: '#E6A23C' \n        },\n        { \n          content: `新注册企业：${this.getRandomCompanyName()}`, \n          color: '#67C23A' \n        },\n        { \n          content: `空气质量指数(AQI)为${50 + Math.floor(Math.random() * 50)}，空气质量${Math.random() > 0.3 ? '良好' : '一般'}`, \n          color: '#409EFF' \n        },\n        { \n          content: `${this.getRandomHospital()}今日门诊量${Math.random() > 0.5 ? '上升' : '下降'}${Math.floor(Math.random() * 15)}%`, \n          color: '#F56C6C' \n        },\n        { \n          content: `${this.getRandomSchool()}举行${this.getRandomEvent()}活动`, \n          color: '#909399' \n        }\n      ]\n      \n      const idx = Math.floor(Math.random() * types.length)\n      this.realtimeList.unshift({ time: `${dateStr} ${timeStr}`, ...types[idx] })\n      if (this.realtimeList.length > 8) this.realtimeList.pop()\n    },\n    // 获取时段\n    getTimeOfDay() {\n      const hour = new Date().getHours()\n      if (hour >= 7 && hour <= 9) return '早高峰'\n      if (hour >= 17 && hour <= 19) return '晚高峰'\n      return '当前'\n    },\n    // 随机企业名称\n    getRandomCompanyName() {\n      const prefixes = ['山东', '济宁', '太白湖', '鲁西']\n      const industries = ['智能科技', '新能源', '建筑材料', '医疗器械', '食品', '环保科技', '互联网', '农业科技']\n      const suffixes = ['有限公司', '股份有限公司', '集团', '实业有限公司']\n      \n      return prefixes[Math.floor(Math.random() * prefixes.length)] + \n             industries[Math.floor(Math.random() * industries.length)] + \n             suffixes[Math.floor(Math.random() * suffixes.length)]\n    },\n    // 随机医院名称\n    getRandomHospital() {\n      const hospitals = ['太白湖医院', '济宁市第一人民医院', '济宁市妇幼保健院太白湖分院', '太白湖社区医院', '康复医院']\n      return hospitals[Math.floor(Math.random() * hospitals.length)]\n    },\n    // 随机学校名称\n    getRandomSchool() {\n      const schools = ['太白湖实验学校', '济宁一中太白湖校区', '太白湖小学', '新区第二中学', '新区幼儿园']\n      return schools[Math.floor(Math.random() * schools.length)]\n    },\n    // 随机事件\n    getRandomEvent() {\n      const events = ['科技创新', '读书', '体育', '艺术节', '安全教育', '环保', '校园开放日']\n      return events[Math.floor(Math.random() * events.length)]\n    },\n    refreshRealtime() {\n      this.pushRealtime()\n      this.$message.success('区域实时动态已刷新')\n    },\n    refreshTable() {\n      // 生成今天的模拟数据，但保持在真实范围内\n      const today = new Date();\n      const dateStr = today.toISOString().slice(0, 10);\n      \n      // 更真实的数据范围\n      const pop = 28.2 + Math.random() * 0.8;\n      const ent = 3200 + Math.floor(Math.random() * 100);\n      const env = (91 + Math.random() * 2).toFixed(1);\n      const traffic = (2.2 + Math.random() * 0.4).toFixed(2);\n      const med = 11 + Math.floor(Math.random() * 2);\n      const edu = 34 + Math.floor(Math.random() * 2);\n      \n      // 合理的波动趋势\n      const envTrend = (Math.random() > 0.6 ? 1 : -1) * (0.1 + Math.random() * 0.3);\n      const trafficTrend = (Math.random() > 0.5 ? 1 : -1) * (0.02 + Math.random() * 0.08);\n      const medTrend = Math.random() > 0.8 ? 1 : 0;\n      const eduTrend = Math.random() > 0.9 ? 1 : 0;\n      \n      const timeArr = ['08:00', '09:00', '10:00', '11:00', '12:00', '13:00'];\n      this.tableData = [\n        { type: '人口', value: `${pop.toFixed(1)}万`, updateTime: `${dateStr} ${timeArr[0]}`, trend: '↑' },\n        { type: '企业', value: `${ent}家`, updateTime: `${dateStr} ${timeArr[1]}`, trend: '↑' },\n        { type: '环境', value: env >= 90 ? '良' : '一般', updateTime: `${dateStr} ${timeArr[2]}`, trend: envTrend > 0 ? '↑' : '↓' },\n        { type: '交通', value: traffic < 2 ? '畅通' : '轻度拥堵', updateTime: `${dateStr} ${timeArr[3]}`, trend: trafficTrend < 0 ? '↓' : '↑' },\n        { type: '医疗', value: `${med}家`, updateTime: `${dateStr} ${timeArr[4]}`, trend: medTrend > 0 ? '↑' : '→' },\n        { type: '教育', value: `${edu}所`, updateTime: `${dateStr} ${timeArr[5]}`, trend: eduTrend > 0 ? '↑' : '→' }\n      ];\n      this.$message.success('区域数据明细已刷新');\n    },\n    refreshAll() {\n      this.refreshTable()\n      this.pushRealtime()\n      this.updateTrendChart()\n      this.$message.success('全部数据已刷新')\n    },\n    // 导出分析报告\n    exportReport() {\n      const minutes = Math.floor(Math.random() * 120) + 1;\n      this.$alert(`分析报告已生成，用时${minutes}分钟。`, '导出分析报告', { confirmButtonText: '确定', type: 'success' });\n    },\n    trendValue(card) {\n      // 医疗/教育资源用整数，其他用浮点\n      if (card.title === '医疗资源' || card.title === '教育资源') {\n        return Number(card.trend);\n      }\n      return parseFloat(card.trend);\n    },\n    trendAbs(card) {\n      if (card.title === '医疗资源' || card.title === '教育资源') {\n        return Math.abs(Number(card.trend));\n      }\n      return Math.abs(parseFloat(card.trend)).toFixed(1);\n    },\n    trendPrefix(card) {\n      const v = this.trendValue(card);\n      if (v > 0) return '+';\n      if (v < 0) return '-';\n      return '';\n    },\n    trendUnit(card) {\n      if (card.title === '医疗资源') return '家';\n      if (card.title === '教育资源') return '所';\n      return '%';\n    },\n    trendClass(card) {\n      const v = this.trendValue(card);\n      if (v > 0) return 'trend-up';\n      if (v < 0) return 'trend-down';\n      return 'trend-flat';\n    },\n    getCardClass(card) {\n      if (card.title === '人口总数') return 'card-people';\n      if (card.title === '企业数量') return 'card-business';\n      if (card.title === '环境优良率') return 'card-environment';\n      if (card.title === '交通拥堵指数') return 'card-traffic';\n      if (card.title === '医疗资源') return 'card-medical';\n      if (card.title === '教育资源') return 'card-education';\n      return '';\n    },\n    getTrendTagType(trend) {\n      if (trend === '↑') return 'success';\n      if (trend === '↓') return 'danger';\n      return 'info';\n    },\n    viewDetail(row) {\n      this.$message({\n        message: `查看${row.type}详细数据分析`,\n        type: 'info'\n      });\n    }\n  },\n  beforeDestroy() {\n    if (this.map) {\n      this.map.destroy()\n    }\n    if (this.realtimeTimer) {\n      clearInterval(this.realtimeTimer)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.region-insight-page {\n  padding: 20px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  background-color: #fff;\n  padding: 16px 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.page-title {\n  font-size: 22px;\n  color: #303133;\n  margin: 0;\n  font-weight: 600;\n}\n\n.page-subtitle {\n  font-size: 14px;\n  color: #909399;\n  margin-top: 6px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n}\n\n.notification-area {\n  margin-bottom: 20px;\n}\n\n.dashboard-announcement {\n  margin-bottom: 10px;\n}\n\n.warning-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.warning-header {\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.warning-header i {\n  color: #F56C6C;\n  margin-right: 8px;\n  font-size: 18px;\n}\n\n.warning-count {\n  margin-left: auto;\n}\n\n.warning-content {\n  padding: 10px 0;\n}\n\n.warning-item {\n  display: flex;\n  align-items: flex-start;\n  padding: 12px 16px;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  background-color: #fdf6ec;\n  transition: all 0.3s;\n}\n\n.warning-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.warning-item:last-child {\n  margin-bottom: 0;\n}\n\n.high-warning {\n  background-color: #fef0f0;\n  border-left: 4px solid #F56C6C;\n}\n\n.medium-warning {\n  background-color: #fdf6ec;\n  border-left: 4px solid #E6A23C;\n}\n\n.warning-icon {\n  margin-right: 10px;\n  font-size: 20px;\n}\n\n.high-warning .warning-icon i {\n  color: #F56C6C;\n}\n\n.medium-warning .warning-icon i {\n  color: #E6A23C;\n}\n\n.warning-text {\n  flex: 1;\n}\n\n.warning-level {\n  font-size: 14px;\n  font-weight: bold;\n  margin-bottom: 4px;\n}\n\n.high-warning .warning-level {\n  color: #F56C6C;\n}\n\n.medium-warning .warning-level {\n  color: #E6A23C;\n}\n\n.warning-message {\n  font-size: 14px;\n  color: #606266;\n  line-height: 1.4;\n}\n\n.warning-action {\n  margin-left: 10px;\n  align-self: center;\n}\n\n.data-cards {\n  margin-bottom: 20px;\n}\n\n.stat-card {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 16px;\n  height: 140px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  transition: all 0.3s;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.stat-card::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 4px;\n  background: linear-gradient(to right, rgba(64, 158, 255, 0.8), rgba(64, 158, 255, 0.4));\n}\n\n.card-people::after {\n  background: linear-gradient(to right, rgba(64, 158, 255, 0.8), rgba(64, 158, 255, 0.4));\n}\n\n.card-business::after {\n  background: linear-gradient(to right, rgba(103, 194, 58, 0.8), rgba(103, 194, 58, 0.4));\n}\n\n.card-environment::after {\n  background: linear-gradient(to right, rgba(144, 147, 153, 0.8), rgba(144, 147, 153, 0.4));\n}\n\n.card-traffic::after {\n  background: linear-gradient(to right, rgba(230, 162, 60, 0.8), rgba(230, 162, 60, 0.4));\n}\n\n.card-medical::after {\n  background: linear-gradient(to right, rgba(245, 108, 108, 0.8), rgba(245, 108, 108, 0.4));\n}\n\n.card-education::after {\n  background: linear-gradient(to right, rgba(83, 168, 255, 0.8), rgba(83, 168, 255, 0.4));\n}\n\n.card-icon {\n  font-size: 20px;\n  color: #909399;\n  margin-bottom: 12px;\n}\n\n.card-people .card-icon {\n  color: #409EFF;\n}\n\n.card-business .card-icon {\n  color: #67C23A;\n}\n\n.card-environment .card-icon {\n  color: #909399;\n}\n\n.card-traffic .card-icon {\n  color: #E6A23C;\n}\n\n.card-medical .card-icon {\n  color: #F56C6C;\n}\n\n.card-education .card-icon {\n  color: #53A8FF;\n}\n\n.card-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.card-title {\n  font-size: 14px;\n  color: #909399;\n  margin-bottom: 8px;\n}\n\n.card-value {\n  font-size: 28px;\n  font-weight: bold;\n  color: #303133;\n  margin-bottom: 8px;\n}\n\n.card-trend {\n  font-size: 13px;\n}\n\n.trend-up {\n  color: #67C23A;\n  display: flex;\n  align-items: center;\n}\n\n.trend-down {\n  color: #F56C6C;\n  display: flex;\n  align-items: center;\n}\n\n.trend-flat {\n  color: #909399;\n  display: flex;\n  align-items: center;\n}\n\n.trend-up i, .trend-down i, .trend-flat i {\n  margin-right: 4px;\n  font-size: 14px;\n}\n\n.chart-section {\n  margin-bottom: 20px;\n}\n\n.chart-card {\n  height: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 0.3s;\n}\n\n.chart-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 0 10px 0;\n}\n\n.chart-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #303133;\n  display: flex;\n  align-items: center;\n}\n\n.chart-title i {\n  margin-right: 8px;\n  color: #409EFF;\n}\n\n.chart-container {\n  height: 350px;\n}\n\n.realtime-section {\n  margin-bottom: 20px;\n}\n\n.realtime-card {\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 0.3s;\n}\n\n.realtime-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.realtime-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #303133;\n  display: flex;\n  align-items: center;\n}\n\n.realtime-title i {\n  margin-right: 8px;\n  color: #409EFF;\n}\n\n.realtime-actions {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.realtime-timeline {\n  padding: 10px;\n  max-height: 350px;\n  overflow-y: auto;\n}\n\n.timeline-card {\n  transition: all 0.3s;\n}\n\n.timeline-card:hover {\n  transform: translateX(5px);\n}\n\n.timeline-content {\n  font-size: 14px;\n  color: #606266;\n}\n\n.detail-card {\n  border-radius: 8px;\n  overflow: hidden;\n  margin-bottom: 20px;\n}\n\n.detail-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.detail-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #303133;\n  display: flex;\n  align-items: center;\n}\n\n.detail-title i {\n  margin-right: 8px;\n  color: #409EFF;\n}\n\n.dashboard-table-row {\n  transition: all 0.3s;\n}\n\n.dashboard-table-row:hover {\n  background-color: #f0f9ff !important;\n}\n</style> ","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./insight.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./insight.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./insight.vue?vue&type=template&id=9f0ec002&scoped=true\"\nimport script from \"./insight.vue?vue&type=script&lang=js\"\nexport * from \"./insight.vue?vue&type=script&lang=js\"\nimport style0 from \"./insight.vue?vue&type=style&index=0&id=9f0ec002&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9f0ec002\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./insight.vue?vue&type=style&index=0&id=9f0ec002&prod&scoped=true&lang=css\""],"sourceRoot":""}